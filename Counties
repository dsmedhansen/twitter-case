import numpy as np
import pandas as pd
from matplotlib import pyplot as plt

import gensim
from gensim import corpora

##Create a data frame - tweet per row
tweets = pd.DataFrame()
tweets["user_id"] = [val1["id"] for val1 in [val2["user"] for val2 in tweets_data]]
tweets["time"] = [val["created_at"] for val in tweets_data]
tweets["country"] = [val1["country"] for val1 in [val2["place"] for val2 in tweets_data]]
tweets["coordinates"] = [val1["coordinates"] for val1 in [val2["bounding_box"] for val2 in [val3["place"] for val3 in tweets_data]]]
#tweets["user_followers"] = [val1["followers_count"] for val1 in [val2["user"] for val2 in tweets_data]]
#tweets["user_friends"] = [val1["friends_count"] for val1 in [val2["user"] for val2 in tweets_data]]

tweets["text"] = [val["text"] for val in tweets_data]
tweets["language"] = [val["lang"] for val in tweets_data]

tweets.head()

##Find the coordinate centeroids
from shapely.geometry import MultiPoint

tweets["location_centeroid"] = [MultiPoint(val1[0]).centroid for val1 in tweets.coordinates]
tweets["location_centeroid"] = [val1.coords[0:1] for val1 in tweets.location_centeroid]
tweets["location_centeroid"] = [list(val1[0]) for val1 in tweets.location_centeroid]

##Find distance from centeroid to each coordinate-set
from haversine import haversine

l = [[] for i in tweets.location_centeroid]
flatten = lambda l: [item for sublist in l for item in sublist]

for i in range(0, (len(l))):
    for e in range(0,len(flatten(tweets.coordinates[i]))):
        l[i].append(haversine([tweets.ix[i, "location_centeroid"][1], tweets.ix[i, "location_centeroid"][0]],
                              [tweets.iloc[i,3][0][e][1], tweets.iloc[i,3][0][e][0]], miles = True))

tweets["distance_from_centeroid"] = l
for i in range(0, len(tweets["distance_from_centeroid"])):
    tweets.ix[i,"distance_from_centeroid"] = tweets.ix[i,"distance_from_centeroid"][0]
 
 
##GEOLOCATION
from uszipcode import Zipcode
from uszipcode import SearchEngine
search = SearchEngine(simple_zipcode=True)

'''
tweets["zipcode"] = [search.by_coordinates(val1[1], val1[0], radius=r, returns=1) 
                     for val1 in tweets["location_centeroid"] for r in tweets["distance_from_centeroid"]]
'''

tweets["zipcode"] = [search.by_coordinates(val1[1], val1[0], radius=4, returns=1) 
                     for val1 in tweets["location_centeroid"]]
